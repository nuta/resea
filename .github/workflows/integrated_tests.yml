name: Integrated Tests

on:
  push:
    branches: "*"
  pull_request:
    branches: "*"

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-20.04
            TARGET: x64
            EXPECTED: "Passed all tests"
          - os: ubuntu-20.04
            TARGET: arm64
            EXPECTED: "Passed all tests"
          - os: ubuntu-20.04
            TARGET: arm
            EXPECTED: "Passed all tests"
          - os: ubuntu-20.04
            TARGET: x64_release
            EXPECTED: "Passed all tests"
          - os: ubuntu-20.04
            TARGET: arm64_release
            EXPECTED: "Passed all tests"
          - os: ubuntu-20.04
            TARGET: arm_release
            EXPECTED: "Passed all tests"
          - os: macos-latest
            TARGET: x64
            EXPECTED: "Passed all tests"
          - os: ubuntu-20.04
            TARGET: minlin
            EXPECTED: "built-in shell (ash)"
          - os: ubuntu-20.04
            TARGET: tcpip
            EXPECTED: "dhcp: leased ip=10.0.2.15"
          - os: ubuntu-20.04
            TARGET: rust
            EXPECTED: "Hello World from Rust!"
          - os: ubuntu-20.04
            TARGET: example_arch
            EXPECTED: "Implement 'make run' in kernel/<ARCH>/build.mk!"
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Set up Rust
        run: |
          rustup override set nightly
          rustup component add rust-src --toolchain nightly

      - name: Install apt packages
        if: matrix.os == 'ubuntu-20.04'
        run: >
          sudo apt-get update && sudo apt-get install -y llvm clang lld qemu-system gcc-arm-none-eabi

      - name: Install Homebrew packages
        if: matrix.os == 'macos-latest'
        run: >
          brew install llvm qemu

      - name: Install pip packages
        run: pip3 install --user -r tools/requirements.txt

      - name: Build
        run: |
          make mergeconfig CONFIG_FILES="ci/${{ matrix.TARGET }}.config"
          make -j2 build

      - name: Test
        run: |
          EXPECTED="${{ matrix.EXPECTED }}" make -j2 test RUNCHECKFLAGS="--timeout 60"
